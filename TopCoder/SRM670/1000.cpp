#include<bits/stdc++.h>

#define fi first
#define se second
#define U unsigned
#define P std::pair<int,int>
#define LL long long
#define pb push_back
#define MP std::make_pair
#define all(x) x.begin(),x.end()
#define CLR(i,a) memset(i,a,sizeof(i))
#define FOR(i,a,b) for(int i = a;i <= b;++i)
#define ROF(i,a,b) for(int i = a;i >= b;--i)
#define DEBUG(x) std::cerr << #x << '=' << x << std::endl
class Gxor{
	int n,m;
	int G[55][15][15],p[55];
	P e[100000+2];
	LL b[64];LL ans = 0,fac[55];
	inline void dfs(int step,int num){ // Bell(n)
		if(step == n){
			// xxx
			int tp = -1,sz = 0;CLR(b,0);
			FOR(i,0,n-1) FOR(j,i+1,n-1) if(p[i] != p[j]) e[++tp] = MP(i,j);
			FOR(i,0,m-1){
				LL now = 0;
				FOR(j,0,tp) now |= (1ll*G[i][e[j].fi][e[j].se])<<j;
				ROF(j,tp,0){
					if((now>>j)&1){
						if(b[j]) now ^= b[j];
						else {b[j] = now;sz++;break;}
					}
				}
			}
			ans += 1ll*fac[num-1]*(1ll<<(LL)(m-sz));
			return;
		}
		FOR(i,1,num+1) p[step] = i,dfs(step+1,std::max(num,i));
	}
public:
	LL countsubs(std::vector<std::string> S){
		while(n*(n-1)/2 != S[0].length()) ++n;m = S.size();
		FOR(i,0,m-1){
			int tot = 0;
			FOR(j,0,n-1){
				FOR(k,j+1,n-1){
					if(S[i][tot] == '1') G[i][j][k] = G[i][k][j] = 1;
					tot++;
				}
			}
		}
		fac[0] = 1;
		FOR(i,1,n) fac[i] = -fac[i-1]*i;
		dfs(0,0);
		return ans;
	}
};

#ifdef RainAir
Gxor tst;
int main(){
	printf("%lld\n",tst.countsubs({"000000100000100110001000110001001000","010100001000000000000001001010000000", "101000100010000100000000010000000010","110001101110110000010000000001000101", "000001000000010000000110001010100101","100100010001010000000000000010000010", "111001000000111111001001011001010000","100001100000110001011110000001010001", "111000000001100100000000000011100000","111010110000011000100000000001101000", "001000100000001010001001001000011001","110111001101000100000101000100100100", "100111000010100110001100101101000001","000010100000110111000000000100100000", "000100001010000000010010000000100100","001100000010010000000100100001100000", "001000100100000100001000000100010001","011010000110001000000001010011001100", "000100011111100000000010010010110000","000001010101001010011111100000000110", "000010000010001010100100010001100000","010001011000000000000100000110000001", "010000000100100000000000000000011000","100101001000001100000100001000000001", "100010000000000000000001000000010000","101010000010001001011011000000000100", "000010000000011010111000010111100100","010001101111000100100101110000100000", "000110010000000100000000000010000010","111000001000000010010000011100000100", "000010101100100100010100000000000000","110010001000100100010000000000000000", "011000100000000100110101101100100001","000100000011001110100000001100111010", "000110001101100010100000000000010000","000110010010011001010010100110001001", "110001100000010000000000100100010110","001110011000110000100110000011001000", "000001000100000110011100000100000101","100001000000010000100000101001101100", "011010110000011000110011111101011110","010001100010101100000101000000010001", "011011000101000001101110100011110110","101000001100010010001100011000000010", "001111000011100001110000010010010001","010000001010010000010000101000110000", "001101100001000101000100010011001110","001010110110101000010100101101010101", "000100010111110010010100101000100101","100010000000010101111010010000110001"}));
	return 0;
}
#endif